handlers=java.util.logging.ConsoleHandler
.level=INFO

###############################################################################
#
# Console Logging
#
###############################################################################
java.util.logging.ConsoleHandler.level=ALL
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.SimpleFormatter.format=[%1$tc] %4$s %2$s %5$s%6$s%n
#confLogger.level=ALL
#io.vertx.level = WARNING
io.vertx.core.impl.BlockedThreadChecker.level=SEVERE


###############################################################################
#
# File Logging
#
###############################################################################

java.util.logging.FileHandler.level = ALL
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
# Specifies an approximate maximum amount to write (in bytes) to any one file.
# If this is zero, then there is no limit. (Defaults to no limit).
java.util.logging.FileHandler.limit = 10240000

# Specifies how many output files to cycle through (defaults to 1).
java.util.logging.FileHandler.count = 2

# Specifies a pattern for generating the output file name.
#     (Defaults to "%h/java%u.log").
#
# Pattern options:
#
#    "/" the local pathname separator
#    "%t" the system temporary directory
#    "%h" the value of the "user.home" system property
#    "%g" the generation number to distinguish rotated logs
#    "%u" a unique number to resolve conflicts
#    "%%" translates to a single percent sign "%"
java.util.logging.FileHandler.pattern = %t\application-%g-%u.log

# Specifies whether the FileHandler should append onto any existing files
#      (defaults to false).
java.util.logging.FileHandler.append = true

# The name of the character set encoding to use
#      (defaults to the default platform encoding).
java.util.logging.FileHandler.encoding=UTF-8


o.mobitech.search_trends.handlers=java.util.logging.FileHandler

#SEVERE (highest value)
#WARNING
#INFO
#CONFIG
#FINE
#FINER
#FINEST (lowest value)
